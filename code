import re

def check_password_strength(password):
    # Password strength criteria
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    number_criteria = bool(re.search(r'[0-9]', password))
    special_char_criteria = bool(re.search(r'[^A-Za-z0-9]', password))

    # Evaluate password strength score
    score = 0
    if length_criteria:
        score += 1
    if uppercase_criteria:
        score += 1
    if number_criteria:
        score += 1
    if special_char_criteria:
        score += 1

    # Password strength evaluation
    if score == 4:
        strength = "Strong"
    elif score == 3:
        strength = "Medium"
    else:
        strength = "Weak"

    # Password strength feedback
    suggestions = []
    if not length_criteria:
        suggestions.append("Password should be at least 8 characters long.")
    if not uppercase_criteria:
        suggestions.append("Password should contain at least one uppercase letter.")
    if not number_criteria:
        suggestions.append("Password should contain at least one number.")
    if not special_char_criteria:
        suggestions.append("Password should contain at least one special character (e.g., !, @, #, $, etc.).")

    return strength, suggestions

def main():
    print("Welcome to the Password Strength Checker!")

    while True:
        password = input("\nEnter your password: ")
        
        strength, suggestions = check_password_strength(password)
        
        print(f"\nPassword Strength: {strength}")
        if strength != "Strong":
            print("Suggestions to improve password security:")
            for suggestion in suggestions:
                print(f"- {suggestion}")
        else:
            print("Your password is strong!")
        
        # Ask if the user wants to check another password
        continue_check = input("\nWould you like to check another password? (y/n): ").lower()
        if continue_check != 'y':
            print("\nThank you for using the Password Strength Checker!")
            break

if __name__ == "__main__":
    main()
